
import java.text.DecimalFormat; //imports decimal format 
/*
* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author S300095291
 */
public class QUIZTWO extends javax.swing.JFrame {
    
    int quesNum = 0; //initializes variable for number of questions
    int score = 0; //initializes variable for score counter
    
    double perscore; // initializes varible to later convert integer score into double
    final int TOTAL = 6; //finalizes variable for amount of questions
    double pertotal; //initializes varible to later convert integer totalscore into double
    
    double percent;// initializes varible for percent
    
    DecimalFormat df = new DecimalFormat("#.0"); //creates a function to round to one decimal place
    
    String[] Questions = {"What is the first letter in the alphabet", "What is 1 + 1?", "Krish had 4 tomatoes. How many potatoes did he eat?", "What country is Africa in?", "Who is the smartest person alive?"};   
    String[] AnswerA = {"A. A", "A. 1", "A. 4", "A. It's not a country", "A. Neha"};
    String[] AnswerB = {"B. E", "B. 3", "B. 0", "B. Pakistan", "B. Mr.Buckland"};
    String[] AnswerC = {"C. N", "C. 293", "C. 2", "C. Mars", "C. Krish"};
    String[] AnswerD = {"D. H", "D. 2", "D. I don't know", "D. Brampton", "D. Scarlett Johansson"};
    //all lists above are cycled through to appear on gui every time the button is pressed; the list each contains in respective order the question and each answer for each label
    
    String[] TrueAnswers = {"B", "A", "D", "D", "A", "B"};
    //list contains the correct answers to check with users input
    
    

    /**
     * Creates new form QUIZTWO
     */
    public QUIZTWO() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LBLQues = new javax.swing.JLabel();
        LBLAnsA = new javax.swing.JLabel();
        LBLAnsB = new javax.swing.JLabel();
        LBLAnsC = new javax.swing.JLabel();
        LBLAnsD = new javax.swing.JLabel();
        TXTAns = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        BTNCheck = new javax.swing.JButton();
        LBLOutputmsg = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        BARScore = new javax.swing.JProgressBar();
        jLabel10 = new javax.swing.JLabel();
        LBLScore = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        LBLcorrection = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 30)); // NOI18N
        jLabel1.setText("The Common Sense Quiz");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Answer the questions below by typing in the right LETTER and clicking submit");

        LBLQues.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        LBLQues.setText("What colour is the sky?");

        LBLAnsA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LBLAnsA.setText("A. Black");

        LBLAnsB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LBLAnsB.setText("B. Blue");

        LBLAnsC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LBLAnsC.setText("C. Pink");

        LBLAnsD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LBLAnsD.setText("D. Gold");

        TXTAns.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TXTAns.setText("Answer Here");
        TXTAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTAnsActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        BTNCheck.setText("Check Answer");
        BTNCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNCheckActionPerformed(evt);
            }
        });

        LBLOutputmsg.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        LBLOutputmsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLOutputmsg.setText("Start the Quiz!!");

        BARScore.setMaximum(6);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("YOUR SCORE: ");

        LBLScore.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LBLScore.setText("0/6");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2864309.png"))); // NOI18N

        LBLcorrection.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LBLcorrection.setText("Start");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LBLQues)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TXTAns, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LBLAnsB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LBLAnsA, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                    .addComponent(LBLAnsC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LBLAnsD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(LBLScore))
                                    .addComponent(BARScore, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BTNCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(LBLcorrection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBLOutputmsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BTNCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(LBLcorrection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(LBLScore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BARScore, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBLQues)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLAnsA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLAnsB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLAnsC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LBLAnsD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TXTAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(LBLOutputmsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TXTAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTAnsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTAnsActionPerformed

    private void BTNCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNCheckActionPerformed
        // TODO add your handling code here:
    
        
        
    if (quesNum < 5) //only cycles through questions if the is a new question in the list above
    {
        LBLQues.setText(Questions[quesNum]);
        LBLAnsA.setText(AnswerA[quesNum]);
        LBLAnsB.setText(AnswerB[quesNum]);
        LBLAnsC.setText(AnswerC[quesNum]);
        LBLAnsD.setText(AnswerD[quesNum]);
        //sets the new question and answers indexing from the lists above
    }
    
    
    if ((TXTAns.getText()).equalsIgnoreCase(TrueAnswers[quesNum])) //checks whether the user is correct or not indexing the correct answer list
    {
        
        score += 1; //keeps the score
        
        LBLScore.setText(score + "/" + TOTAL); //updates the users score on gui
        LBLcorrection.setText("Correct Answer!!!"); // outputs correct answer msg
        BARScore.setValue(score); //updates the progress bar in gui
    }
    else //if user is incorrect
    {
        LBLcorrection.setText("Incorrect Answer. :( ");  // outputs incorrect answer msg      
    }
    
    quesNum += 1; //adds one to the questions asked 
    
    if ((score == 1) && (quesNum == 1)) //if user gets first question correct
    {
        LBLOutputmsg.setText("YAYYY, you got the first question right!");
    }
    else if (quesNum == 1) //if user is past first question but has 0 points
    {
        LBLOutputmsg.setText("Oh no, do better on the next question");
    }
    else if (quesNum == 2) //user after second question
    {
        LBLOutputmsg.setText("Fun Fact: The alphabet has 26 letters.");
    }
    else if ((score == 3) && (quesNum == 3))//if user gets all three question correct
    {
        LBLOutputmsg.setText("Woohoo! You are a MATHELETE");
    }
    else if (quesNum == 3)//user after third question
    {
        LBLOutputmsg.setText("Did you know... You can use your fingers to count!!");
    }
    else if (quesNum == 4)//user after fourth question
    {
        LBLOutputmsg.setText("Tomatoes aren't potatoes!!");
    }
    else if (quesNum == 5)//user after fifth question
    {
        LBLOutputmsg.setText("Africa is a Continent!!!");
    }
    else if (quesNum == TOTAL) //user after final question
    {
        LBLQues.setText("That was the last question. You finished the game!"); //tells user that quiz is over
        LBLAnsA.setText("You got " + score + " questions correct!"); //tells user correct amount
        LBLAnsB.setText("You got " + (TOTAL-score) + " questions wrong."); //tells the user the incorrect amount
        
        perscore = score; //uses perscore as a double value of score
        pertotal = TOTAL;//uses pertotal as a double value of TOTAL
        percent = (perscore/pertotal)*100; //gets the actual percentage
        
        LBLAnsC.setText("The percent you got on this quiz is " + df.format(percent) + "%"); //outputs rounded percentage to user
        
        LBLAnsD.setText(""); //creates a blank label that is unused
        
        LBLOutputmsg.setText("Your final score is " + score + "/" + TOTAL); //outputs users overall final score
    }
    

    
        
        
    }//GEN-LAST:event_BTNCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QUIZTWO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QUIZTWO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QUIZTWO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QUIZTWO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QUIZTWO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar BARScore;
    private javax.swing.JButton BTNCheck;
    private javax.swing.JLabel LBLAnsA;
    private javax.swing.JLabel LBLAnsB;
    private javax.swing.JLabel LBLAnsC;
    private javax.swing.JLabel LBLAnsD;
    private javax.swing.JLabel LBLOutputmsg;
    private javax.swing.JLabel LBLQues;
    private javax.swing.JLabel LBLScore;
    private javax.swing.JLabel LBLcorrection;
    private javax.swing.JTextField TXTAns;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}

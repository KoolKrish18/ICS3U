/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author S300095291
 */
public class MainFRM extends javax.swing.JFrame {
    
    

    /**
     * Creates new form MainFRM
     */
    public MainFRM() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(248, 248, 248)); //changes colour of backgroundof gui
        


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Welcome = new javax.swing.JLabel();
        Instructions = new javax.swing.JLabel();
        PopularDrinks = new javax.swing.JLabel();
        LBLExp = new javax.swing.JLabel();
        LBLAme = new javax.swing.JLabel();
        LBLMach = new javax.swing.JLabel();
        LBLLatt = new javax.swing.JLabel();
        LBLCapp = new javax.swing.JLabel();
        CBOXExp = new javax.swing.JComboBox<>();
        CBOXAme = new javax.swing.JComboBox<>();
        CBOXMacc = new javax.swing.JComboBox<>();
        CBOXLatte = new javax.swing.JComboBox<>();
        CBOXCapp = new javax.swing.JComboBox<>();
        TXTExp = new javax.swing.JTextField();
        TXTAme = new javax.swing.JTextField();
        TXTMacc = new javax.swing.JTextField();
        TXTLat = new javax.swing.JTextField();
        TXTCapp = new javax.swing.JTextField();
        SpecialtyDrinks = new javax.swing.JLabel();
        TXTHot = new javax.swing.JTextField();
        TXTCook = new javax.swing.JTextField();
        TXTHaze = new javax.swing.JTextField();
        TXTMatch = new javax.swing.JTextField();
        TXTCream = new javax.swing.JTextField();
        LBLHot = new javax.swing.JLabel();
        LBLCookis = new javax.swing.JLabel();
        LBLHaze = new javax.swing.JLabel();
        LBLMat = new javax.swing.JLabel();
        LBLCream = new javax.swing.JLabel();
        CBOXHot = new javax.swing.JComboBox<>();
        CBOXCream = new javax.swing.JComboBox<>();
        CBOXMatch = new javax.swing.JComboBox<>();
        CBOXHaze = new javax.swing.JComboBox<>();
        CBOXCook = new javax.swing.JComboBox<>();
        BTNBill = new javax.swing.JButton();
        Subtotal = new javax.swing.JLabel();
        Tax = new javax.swing.JLabel();
        Grand = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LBLReturnTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        Welcome.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Welcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Welcome.setText("Welcome to Krish's Coffee Corner!");

        Instructions.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Instructions.setText("Please state the coffee and size you would like to buy");

        PopularDrinks.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        PopularDrinks.setText("Popular Drinks - Small($2.49), Medium($3.49), Large($4.49)");

        LBLExp.setText("Expresso");

        LBLAme.setText("Americano");

        LBLMach.setText("Macchiato");

        LBLLatt.setText("Latte");

        LBLCapp.setText("Cappuccino");

        CBOXExp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXAme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXMacc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXLatte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));
        CBOXLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBOXLatteActionPerformed(evt);
            }
        });

        CBOXCapp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        TXTExp.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTExp.setText("0");

        TXTAme.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTAme.setText("0");

        TXTMacc.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTMacc.setText("0");

        TXTLat.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTLat.setText("0");

        TXTCapp.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTCapp.setText("0");
        TXTCapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTCappActionPerformed(evt);
            }
        });

        SpecialtyDrinks.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        SpecialtyDrinks.setText("Specialty Drinks - Small($3.49), Medium($4.49), Large($5.49)");

        TXTHot.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTHot.setText("0");

        TXTCook.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTCook.setText("0");

        TXTHaze.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTHaze.setText("0");

        TXTMatch.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTMatch.setText("0");

        TXTCream.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TXTCream.setText("0");
        TXTCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTCreamActionPerformed(evt);
            }
        });

        LBLHot.setText("Hot Chocolate");

        LBLCookis.setText("Cookies and Cream Coffee");

        LBLHaze.setText("Hazelnut Mocha");

        LBLMat.setText("Matcha Cream Coffee");

        LBLCream.setText("Vanilla Cream Latte");

        CBOXHot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXCream.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXMatch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXHaze.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        CBOXCook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small", "Medium", "Large" }));

        BTNBill.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BTNBill.setText("Calculate Bill");
        BTNBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNBillActionPerformed(evt);
            }
        });

        Subtotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Subtotal.setText("Subtotal");

        Tax.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Tax.setText("Taxes");

        Grand.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Grand.setText("Grand Total");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/st,small,507x507-pad,600x600,f8f8f8.png"))); // NOI18N

        LBLReturnTxt.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        LBLReturnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBLReturnTxt.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SpecialtyDrinks)
                            .addComponent(Welcome)
                            .addComponent(Instructions)
                            .addComponent(PopularDrinks))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LBLCream)
                                    .addComponent(LBLMat)
                                    .addComponent(LBLHaze)
                                    .addComponent(LBLCookis)
                                    .addComponent(LBLHot))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTMatch))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTCream, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXHot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTHot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXCook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTCook, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXHaze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTHaze, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Grand, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Subtotal, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BTNBill, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Tax, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LBLCapp)
                                    .addComponent(LBLLatt)
                                    .addComponent(LBLMach)
                                    .addComponent(LBLAme)
                                    .addComponent(LBLExp))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTLat))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXCapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTCapp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTExp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXAme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTAme, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBOXMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TXTMacc, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LBLReturnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                                        .addComponent(jLabel2)
                                        .addContainerGap())))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Welcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Instructions)
                        .addGap(18, 18, 18)
                        .addComponent(PopularDrinks)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLExp)
                            .addComponent(CBOXExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLAme)
                            .addComponent(CBOXAme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTAme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLMach)
                            .addComponent(CBOXMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLLatt)
                            .addComponent(CBOXLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTLat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLCapp)
                            .addComponent(CBOXCapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTCapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(LBLReturnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addComponent(SpecialtyDrinks)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLHot)
                            .addComponent(CBOXHot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTHot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLCookis)
                            .addComponent(CBOXCook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTCook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLHaze)
                            .addComponent(CBOXHaze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTHaze, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LBLMat)
                            .addComponent(CBOXMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTNBill)
                        .addGap(18, 18, 18)
                        .addComponent(Subtotal)
                        .addGap(18, 18, 18)
                        .addComponent(Tax)
                        .addGap(18, 18, 18)
                        .addComponent(Grand)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLCream)
                    .addComponent(CBOXCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TXTCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TXTCappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTCappActionPerformed
            // TODO add your handling code here:
    }//GEN-LAST:event_TXTCappActionPerformed

    private void TXTCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTCreamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTCreamActionPerformed

    private void BTNBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNBillActionPerformed
        
        int exp = Integer.parseInt(TXTExp.getText()); //initializes exp and gets the amount 
        int ame = Integer.parseInt(TXTAme.getText());//initializes ame and gets the amount
        int macc = Integer.parseInt(TXTMacc.getText());//initializes macc and gets the amount
        int latte = Integer.parseInt(TXTLat.getText());//initializes latte and gets the amount
        int capp = Integer.parseInt(TXTCapp.getText());//initializes capp  and gets the amount
        
        int hot = Integer.parseInt(TXTHot.getText());//initializes hot and gets the amount
        int cookies = Integer.parseInt(TXTCook.getText());//initializes cookies and gets the amount
        int hazelnut = Integer.parseInt(TXTHaze.getText());//initializes hazelnut and gets the amount
        int matcha = Integer.parseInt(TXTMatch.getText());//initializes matcha and gets the amount
        int cream = Integer.parseInt(TXTCream.getText());//initializes cream and gets the amount
        
        final double PRICE = 2.49; //finalizes base price to 2.49

        double pop = exp + ame + macc + latte + capp; //calculates the number of normal drinks ordered
        pop = pop*PRICE; //calculates price for all normal drinks
        double special = hot + cookies + hazelnut + matcha + cream;//calculates the number of special drinks ordered
        special = special*(PRICE+1); //calculates price for all special drinks
        
        double subtotal = pop + special; //calculates total price
        
        if (CBOXExp.getSelectedItem() == "Medium") //checks if drink is medium
        {
            for (int i = 0; i < exp; i++) //runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00; //adds the extra charge
            }    
        }
        else if (CBOXExp.getSelectedItem() == "Large")//checks if drink is large
        {
            for (int i = 0; i < exp; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }
        
        if (CBOXAme.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < ame; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }     
        }
        else if (CBOXAme.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < ame; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }        
        
        if (CBOXMacc.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < macc; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXMacc.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < macc; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }
        
        if (CBOXLatte.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < latte; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXLatte.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < latte; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }        
        
        if (CBOXCapp.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < capp; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXCapp.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < capp; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }
        
        
        
        if (CBOXHot.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < hot; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXHot.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < hot; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }   
        }

        if (CBOXCook.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < cookies; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXCook.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < cookies; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }

        if (CBOXHaze.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < hazelnut; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXHaze.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < hazelnut; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }

        if (CBOXMatch.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < matcha; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXMatch.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < matcha; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }          
        }

        if (CBOXCream.getSelectedItem() == "Medium")//checks if drink is medium
        {
            for (int i = 0; i < cream; i++)//runs for loop adding extra charge for each medium drink
            {
                subtotal += 1.00;//adds the extra charge
            }    
        }
        else if (CBOXCream.getSelectedItem() == "Large")//checks if drink is medium
        {
            for (int i = 0; i < cream; i++)//runs for loop adding extra charge for each large drink
            {
                subtotal += 2.00;//adds the extra charge
            }    
        }
        
        
        Subtotal.setText("Your Subtotal is $" + String.format("%.2f",subtotal)); //replaces subtotal label with the dollar sign and subtotal, as a string, to 2 decimal places
        Tax.setText("Your Tax is $" + String.format("%.2f",subtotal*0.13)); //replaces tax label with the dollar sign and tax, as a string, to 2 decimal places
        Grand.setText("Your Grand Total is $" + String.format("%.2f",subtotal*1.13)); //replaces grandtotal label with the dollar sign and grandtotal, as a string, to 2 decimal places
        
        if ((pop > 0) && (special == 0)) // checks if only popular drinks were bought
        {
            LBLReturnTxt.setText("Thank you for purchasing a popular drink at Krish's Coffee Corner!!"); //msg for only popular drinks
        }
        else if ((special > 0 ) && (pop == 0)) // checks if only special drinks were bought
        {
            LBLReturnTxt.setText("Thank you for purchasing a special drink at Krish's Coffee Corner!!");//msg for only special drinks
        }
        else // for all drinks
        {
            LBLReturnTxt.setText("Thank you for purchasing drinks at Krish's Coffee Corner!!!");//msg for all drinks
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_BTNBillActionPerformed

    private void CBOXLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBOXLatteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBOXLatteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFRM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNBill;
    private javax.swing.JComboBox<String> CBOXAme;
    private javax.swing.JComboBox<String> CBOXCapp;
    private javax.swing.JComboBox<String> CBOXCook;
    private javax.swing.JComboBox<String> CBOXCream;
    private javax.swing.JComboBox<String> CBOXExp;
    private javax.swing.JComboBox<String> CBOXHaze;
    private javax.swing.JComboBox<String> CBOXHot;
    private javax.swing.JComboBox<String> CBOXLatte;
    private javax.swing.JComboBox<String> CBOXMacc;
    private javax.swing.JComboBox<String> CBOXMatch;
    private javax.swing.JLabel Grand;
    private javax.swing.JLabel Instructions;
    private javax.swing.JLabel LBLAme;
    private javax.swing.JLabel LBLCapp;
    private javax.swing.JLabel LBLCookis;
    private javax.swing.JLabel LBLCream;
    private javax.swing.JLabel LBLExp;
    private javax.swing.JLabel LBLHaze;
    private javax.swing.JLabel LBLHot;
    private javax.swing.JLabel LBLLatt;
    private javax.swing.JLabel LBLMach;
    private javax.swing.JLabel LBLMat;
    private javax.swing.JLabel LBLReturnTxt;
    private javax.swing.JLabel PopularDrinks;
    private javax.swing.JLabel SpecialtyDrinks;
    private javax.swing.JLabel Subtotal;
    private javax.swing.JTextField TXTAme;
    private javax.swing.JTextField TXTCapp;
    private javax.swing.JTextField TXTCook;
    private javax.swing.JTextField TXTCream;
    private javax.swing.JTextField TXTExp;
    private javax.swing.JTextField TXTHaze;
    private javax.swing.JTextField TXTHot;
    private javax.swing.JTextField TXTLat;
    private javax.swing.JTextField TXTMacc;
    private javax.swing.JTextField TXTMatch;
    private javax.swing.JLabel Tax;
    private javax.swing.JLabel Welcome;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
